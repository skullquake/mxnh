// This file was generated by Mendix Modeler.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package nashorn.actions;

import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.webui.CustomJavaAction;
import com.mendix.systemwideinterfaces.core.IMendixObject;
import com.mendix.core.Core;
import java.util.List;
import java.util.ArrayList;
import javax.script.ScriptEngine;
import javax.script.ScriptEngineManager;
import javax.script.ScriptException;
import javax.script.Bindings;

public class _1 extends CustomJavaAction<java.lang.String>
{
	private java.lang.String str_js;

	public _1(IContext context, java.lang.String str_js)
	{
		super(context);
		this.str_js = str_js;
	}

	@java.lang.Override
	public java.lang.String executeAction() throws Exception
	{
		// BEGIN USER CODE
		ScriptEngine engine = new ScriptEngineManager().getEngineByName("nashorn");
		// expose 'log' function - any @FunctionInterface Java
		// object can be exposed as 'function'
		Bindings bindings = engine.createBindings();
		//return (String)engine.eval(str_js);
		bindings.put("root", this);
		bindings.put("bindings", bindings);
		bindings.put("engine", engine);
		bindings.put("context", this.getContext());
		return (String)engine.eval(str_js,bindings);
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "_1";
	}

	// BEGIN EXTRA CODE
	// END EXTRA CODE
}
